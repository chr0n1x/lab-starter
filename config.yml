title: Developing with Docker
tagline: Using Docker to program Ruby to avoid local-machine setups.
description: |
  Docker is a great tool for ensuring that you deploy bit-for-bit any containers that you have tested locally.
  It is not limited to just deploying applications though. It can also be leveraged as a portable development environment.
  In this lab you will learn the basics of building Docker containers for local development.

# Repository setup
# The following section template information for the repository
# This will be used when the repository is crated for each individual learner

template:
  name: ruby-development-in-docker-lab
  repo: ruby-development-in-docker-lab-template

# `before` block
# Actions to take place after the learner registers, but before they start interacting with their repo

# the type of action, full list at https://lab.github.com/docs/actions/
before:
- type: respond
  with: 01_first-response.md

# Steps for the course
# A list of steps that take the learner through the course
# Create one step for each action that a learner will complete

steps:
# Step 1: create Dockerfile, build it, create PR with it.
- title: Create a Dockerfile
  description: Create a Dockerfile with Ruby built in to start developing!
  event: pull_request.synchronize
  actions: # a list of the actions that will occur when the step is triggered by an event
  - type: gate
    left: '%payload.pull_request.title%'
    operator: ===
    right: Add Dockerfile
    else:
    - type: respond
      with: 01_try-again.md
  - type: respond
    with: 01_nice-work.md

# Step 2: write a ruby script
# - title: # the title of the step, shown to the learner in the course progress page
#  description: # a description of the step, shown to the learner in the course progress page
#  event: pull_request.synchronize
#  actions: # a list of the actions that will occur when the step is triggered by an event
#  - type: # the type of action, full list at https://lab.github.com/docs/actions

# Step 3: Write some tests!
# - title: # the title of the step, shown to the learner in the course progress page
#  description: # a description of the step, shown to the learner in the course progress page
#  event: pull_request.synchronize
#  actions: # a list of the actions that will occur when the step is triggered by an event
#  - type: # the type of action, full list at https://lab.github.com/docs/actions

# Step 4: Commit ALL the things
# - title: # the title of the step, shown to the learner in the course progress page
#  description: # a description of the step, shown to the learner in the course progress page
#  event: status
#  actions: # a list of the actions that will occur when the step is triggered by an event
#  - type: # the type of action, full list at https://lab.github.com/docs/actions
